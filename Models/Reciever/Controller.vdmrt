class Controller



instance variables

-- thread period
private period: nat := 1E9;

-- access shared variable "iin"
iin: MessagePort;

operations

public Controller: nat1 * StringPort ==> Controller
Controller(p,s) == (
  period := frequency_to_period(p);
	iin := new MessagePort(s)
);

private Step: () ==>()
Step() == cycles(2) 
(
	-- read input
	let msgs = iin.getValue() in
	  for all i in set inds msgs do (
			let x = msgs(i) in 
		    -- N.B. using a tuple until the library can handle custom types 
			  -- debug 
			  IO`printf("RECEIVER.FMU: Got %s at %s\n", [x, time/1e9])
	  )
);

-- run as a periodic thread
thread periodic(period, 0 ,0, 0)(Step);

functions 

-- convert frequency to period in nanoseconds
private frequency_to_period: real -> nat
frequency_to_period(f) == floor 1E9/f  

end Controller